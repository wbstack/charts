apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wdqs.fullname" . }}
  labels:
{{ include "wdqs.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
    rollingUpdate: null
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "wdqs.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "wdqs.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - mountPath: "/wdqs/data"
            name: data
          - mountPath: /wdqs/allowlist.txt
            subPath: allowlist.txt
            name: allowlist
            readOnly: true
          ports:
            - name: http
              containerPort: 9999
              protocol: TCP
          {{- if .Values.useProbes }}
          livenessProbe:
            httpGet:
              path: /bigdata/
              port: http
            # wdqs can take some time on initial boot, so take that into account
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /bigdata/
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 15
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: WDQS_HOST
            value: {{ include "wdqs.fullname" . }}
          - name: HEAP_SIZE
            value: {{ .Values.app.heapSize }}
            # TODO would use -XX:+UseSerialGC but conflicts with -XX:+UseG1GC in runBlazegraph.sh
          - name: EXTRA_JVM_OPTS
            value: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAM=2g -XX:+TieredCompilation -XX:TieredStopAtLevel=1"
          - name: GC_LOGS
            value: " "
            #TODO allow passing value in values
          - name: WDQS_ENTITY_NAMESPACES
            value: 120,122
      volumes:
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "wdqs.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: allowlist
        configMap:
          name: {{ include "wdqs.fullname" . }}-allowlist
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
