image:
  repository: ghcr.io/wbstack/api
  tag: 8x.9.11
  pullPolicy: IfNotPresent

useProbes: true
probes:
  web:
    livenessProbe:
      enabled: true
      timeoutSeconds: 2
      periodSeconds: 10
      initialDelaySeconds: 10
    readinessProbe:
      enabled: true
      timeoutSeconds: 2
      periodSeconds: 10
      initialDelaySeconds: 10
  backend:
    livenessProbe:
      enabled: true
      timeoutSeconds: 2
      periodSeconds: 10
      initialDelaySeconds: 10
    readinessProbe:
      enabled: true
      timeoutSeconds: 2
      periodSeconds: 10
      initialDelaySeconds: 10

replicaCount:
  web: 1
  backend: 1
  scheduler: 1
  queue: 1

queue:
  apiJobNamespace: api-jobs
  # a list of integers defining the delays for backing off when retrying
  # failed jobs from the queue. E.g. `[10,100,1000]`
  backoff: []
  mw:
    db:
      readHost: someHost
      writeHost: someWriteHost
      username: someUser
      passwordSecretName: someSecretName
      passwordSecretKey: password

platform:
  backendMwHost: someHost

wbstack:
  summaryInactiveThreshold:
  # Ranges are passed in duration strings as expected by a PHP DateInterval
  # constructor: https://www.php.net/manual/en/dateinterval.construct.php
  # E.g. PT6H (6 hours) or P30D (30 days)
  summaryCreationRateRanges: []
  signupThrottlingLimit:
  signupThrottlingRange:
  maxWikisPerUser:
  subdomainSuffix: ".undefined.nohost"
  uiurl:
  wikiDbProvisionVersion:
  wikiDbUseVersion:
  elasticSearch:
    enabledByDefault: false
  contact:
    mail:
      recipient: someone@wikimedia.de
      sender: contact-<subject>@wikibase.cloud

app:
  name:
  env: production
  # referring to a k8s secret key/name which holds the app key
  keySecretName: someSecretName
  keySecretKey: someSecretKey
  debug: false
  url: https://api.wbstack.com
  timezone: UTC
  cacheDriver: redis
  queueConnection: redis
  # referring to a k8s secret key/name which holds the jwt secret
  jwtSecretSecretName: SomeSecretName
  jwtSecretSecretKey: SomeSecretKey
  queryServiceHost: someHost:9999
  elasticSearchHost: someHost:1234
  elasticsearch:
    curlTimeout:
      indexInit: 500
  routes:
    load:
      web: 1
      sandbox: 0
  passport:
    public: contentOfPublicKey
    private: contentOfPrivateKey
  redis:
    host: someHost
    password: somePass
    # passwordSecretName: someSecretName
    # passwordSecretKey: password
    port: 6379
    db: 2
    cachedb: 3
    prefix: wbstack_api
  db:
    connection: mysql
    host: mysql-host
    port: 3306
    name: apidb
    user: apiuser
    # password: foo
    passwordSecretName: someSecretName
    passwordSecretKey: password
  mail:
    mailer: mailgun
    mailgundomain: sandbox111.mailgun.org
    mailgunsecret: abc123
    # mailgunendpoint:
    # mailgunSecretName: someSecretName
    # mailgunSecretKey: key
    fromaddress: noreply@sandbox111.mailgun.org
    fromname: WB Stack
    smtphost: smtp.example.com
    smtpport: 587
    smtpencryption: tls
    # smtpuser: mailuser
    # smtpUserSecretName: ""
    # smtpUserSecretKey: ""
    # smtppassword: somesecret
    # smtpPasswordSecretName: ""
    # smtpPasswordSecretKey: ""
  recaptcha:
    sitekey: ""
    # sitekeySecretName: ""
    # sitekeySecretKey: ""
    secret: ""
    # secretSecretName: ""
    # secretSecretKey: ""
    badgehide: true
  gce:
    existingSecret:
    # existingSecret: foo
    # serviceAccountSecret: someSecret
  gcsPublicStatic:
    gceProject: someProject
  stackdriver:
    enabled: false
    loggingEnabled: false
    tracingEnabled: false
    errorReportingEnabled: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false

resources:
  backend: {}
  web: {}
  queue: {}
  scheduler: {}

nodeSelector: {}

tolerations: []
